SELECT USER
FROM DUAL;

--○ TBL_JUMUNBACKUP 테이블과 TBL_JUMUN 테이블을 대상으로
--   제품코드와 주문량의 값이 똑같은 행의 정보를
--   주문번호, 제품코드, 주문량, 주문일자 항목으로 조회한다.

--방법 ①
SELECT J.JUNO, T.JECODE, T.JUSO, J.JUDAY
FROM
(
    SELECT JECODE, JUSO
    FROM TBL_JUMUNBACKUP
    INTERSECT
    SELECT JECODE, JUSO
    FROM TBL_JUMUN
)T JOIN
(   
    SELECT *
    FROM TBL_JUMUNBACKUP
    UNION ALL
    SELECT *
    FROM TBL_JUMUN
)J
ON (T.JECODE = J.JECODE) AND (T.JUSO = J.JUSO) ;

ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD HH24:MI:SS';
--방법 ②

SELECT T.*
FROM
(
    SELECT JUNO, JECODE, JUSO, JUDAY
    FROM TBL_JUMUNBACKUP
    UNION ALL
    SELECT JUNO, JECODE, JUSO, JUDAY
    FROM TBL_JUMUN
)T
WHERE CONCAT(T.JECODE,T.JUSO) 
IN ('바나나킥20','포카칩10','포카칩20','홈런볼20');
-------------------------------
SELECT T.*
FROM
(
    SELECT JUNO, JECODE, JUSO, JUDAY
    FROM TBL_JUMUNBACKUP
    UNION ALL
    SELECT JUNO, JECODE, JUSO, JUDAY
    FROM TBL_JUMUN
)T
WHERE CONCAT(T.JECODE,T.JUSO) 
IN 
(
    SELECT JECODE||JUSO
    FROM TBL_JUMUNBACKUP
    INTERSECT
    SELECT JECODE||JUSO
    FROM TBL_JUMUN
);

----------------------------------------------------------------------------------
SELECT D.DEPTNO, D.DNAME, E.ENAME, E.SAL
FROM EMP E JOIN DEPT D
ON E.DEPTNO = D.DEPTNO;
--==>>
/*
10	ACCOUNTING	CLARK	2450
10	ACCOUNTING	KING	5000
10	ACCOUNTING	MILLER	1300
20	RESEARCH	JONES	2975
20	RESEARCH	FORD	3000
20	RESEARCH	ADAMS	1100
20	RESEARCH	SMITH	800
20	RESEARCH	SCOTT	3000
30	SALES	WARD	1250
30	SALES	TURNER	1500
30	SALES	ALLEN	1600
30	SALES	JAMES	950
30	SALES	BLAKE	2850
30	SALES	MARTIN	1250
*/

SELECT DEPTNO, DNAME, ENAME, SAL
FROM EMP NATURAL JOIN DEPT;

SELECT DEPTNO, DNAME, ENAME, SAL
FROM EMP JOIN DEPT
USING(DEPTNO);
--------------------------------------------------------------------------------

--○ TBL_EMP 테이블에서 급여가 가장 많은 사원의
--   사원번호, 사원명, 직종명, 급여 항목을 조회하는 쿼리문을 구성한다.

DESC TBL_EMP;

SELECT EMPNO, ENAME ,JOB, SAL
FROM TBL_EMP
WHERE SAL = (SELECT MAX(SAL) FROM TBL_EMP);
--==>> 7839	KING	PRESIDENT	5000

-- 『=ANY』
-- 『=ALL』

SELECT EMPNO, ENAME ,JOB, SAL
FROM TBL_EMP
WHERE SAL = ALL(800,1600,1250,2975,1250,2850,2450,3000,5000,1500,1100,950,3000,1300,1500,2000,1700,2500,1000);

SELECT EMPNO, ENAME ,JOB, SAL
FROM TBL_EMP
WHERE SAL >= ALL(SELECT SAL FROM TBL_EMP);


-- ○ TBL_EMP 테이블에서 20번 부서에 근무하는 사원 중
-- 급여가 가장 많은 사원의
-- 사원번호, 사원명, 직종명, 급여 항목을 조회한다

SELECT EMPNO, ENAME, JOB, SAL, DEPTNO
FROM TBL_EMP
WHERE SAL >= ALL(SELECT SAL FROM TBL_EMP WHERE DEPTNO=20)
AND DEPTNO =20;


--○ TBL_EMP 테이블에서 수당(커미션:COMM)이 가장 많은 사원의
--  사원번호, 사원명, 부서번호, 직종명, 커미션 항목을 조회한다.
SELECT EMPNO, ENAME, DEPTNO, JOB, COMM
FROM TBL_EMP
WHERE COMM = (SELECT MAX(COMM) FROM TBL_EMP);
--==>> 7654	MARTIN	30	SALESMAN	1400

SELECT EMPNO, ENAME, DEPTNO, JOB, COMM
FROM TBL_EMP
WHERE COMM >= ALL(SELECT NVL(COMM,0) FROM TBL_EMP) ;

SELECT EMPNO, ENAME, DEPTNO, JOB, COMM
FROM TBL_EMP
WHERE COMM >= ALL(SELECT COMM FROM TBL_EMP WHERE COMM IS NOT NULL) ;


--○ DISTINCT() 중복 행(레코드)을 제거하는 함수

-- 관리자로 등록된 사원들의 사원번호, 사원명, 직종명 항목을 조회한다.
SELECT EMPNO, ENAME, JOB
FROM TBL_EMP
WHERE EMPNO IN (SELECT DISTINCT(MGR) FROM TBL_EMP);
--==>>
/*
7902	FORD	ANALYST
7698	BLAKE	MANAGER
7839	KING	PRESIDENT
7566	JONES	MANAGER
7788	SCOTT	ANALYST
7782	CLARK	MANAGER
*/

SELECT DISTINCT(DEPTNO)
FROM TBL_EMP;
--==>>
/*
30
(null)
20
10
*/

--------------------------------------------------------------------------------

SELECT *
FROM TBL_SAWON;

--○ TBL_SAWON 테이블 백업(데이터 위주) → 각 테이블 간의 관계나 제약조건 등은 제외한 상태

CREATE TABLE TBL_SAWONBACKUP
AS
SELECT *
FROM TBL_SAWON;
--==>> Table TBL_SAWONBACKUP이(가) 생성되었습니다.
-- TBL_SAWON 테이블의 데이터들만 백업을 수행
-- 즉, 다른 이름의 테이블 형태로 저장해 둔 상황

--○ 데이터 수정
UPDATE TBL_SAWON
SET SANAME ='똘똘이';
COMMIT;
--==>>
/*
17개 행 이(가) 업데이트되었습니다.
커밋 완료.
*/



SELECT *
FROM TBL_SAWONBACKUP;


SELECT *
FROM TBL_SAWON;

UPDATE TBL_SAWON 
SET SANAME = (SELECT SANAME FROM TBL_SAWONBACKUP WHERE SANO = TBL_SAWON.SANO)
WHERE SANAME = '똘똘이';
--==>> 17개 행 이(가) 업데이트되었습니다.

COMMIT;
